# Generated by Django 5.0.1 on 2025-10-20 01:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre descriptivo del producto', max_length=200, verbose_name='Nombre del producto')),
                ('description', models.TextField(help_text='Descripción detallada del producto', verbose_name='Descripción')),
                ('price', models.DecimalField(decimal_places=2, help_text='Precio del producto en pesos colombianos', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Precio')),
                ('image', models.ImageField(blank=True, help_text='Imagen del producto (opcional)', null=True, upload_to='products/images/', verbose_name='Imagen')),
                ('stock', models.PositiveIntegerField(default=0, help_text='Cantidad disponible en inventario', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock')),
                ('sku', models.CharField(blank=True, help_text='Código único del producto (se genera automáticamente si no se proporciona)', max_length=50, null=True, unique=True, verbose_name='SKU')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el producto está disponible', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('category', models.ForeignKey(help_text='Categoría a la que pertenece el producto', on_delete=django.db.models.deletion.PROTECT, related_name='products', to='categories.category', verbose_name='Categoría')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='products/additional/', verbose_name='Imagen')),
                ('alt_text', models.CharField(blank=True, help_text='Descripción de la imagen para accesibilidad', max_length=200, verbose_name='Texto alternativo')),
                ('is_primary', models.BooleanField(default=False, help_text='Indica si es la imagen principal del producto', verbose_name='Imagen principal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='products.product', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Imagen de Producto',
                'verbose_name_plural': 'Imágenes de Productos',
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='products_name_6f9890_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='products_categor_4083ff_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='products_price_fe467e_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='products_is_acti_cb485f_idx'),
        ),
    ]
